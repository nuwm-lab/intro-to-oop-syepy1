using System;

public interface ICoordinates
{
    void SetPolarCoordinates(double radius, double angle);
    void SetCartesianCoordinates(double x, double y);
    (double, double) ConvertToCartesian();
}

public abstract class Coordinates : ICoordinates
{
    public abstract void SetPolarCoordinates(double radius, double angle);
    public abstract void SetCartesianCoordinates(double x, double y);
    public abstract (double, double) ConvertToCartesian();

    public Coordinates()
    {
        Console.WriteLine("Створення координат...");
    }

    ~Coordinates()
    {
        Console.WriteLine("Знищення координат...");
    }
}

public class PolarCoordinates : Coordinates
{
    public double Radius { get; set; }
    public double Angle { get; set; }

    public override void SetPolarCoordinates(double radius, double angle)
    {
        Radius = radius;
        Angle = angle;
    }

    public override void SetCartesianCoordinates(double x, double y)
    {
        Radius = Math.Sqrt(x * x + y * y);
        Angle = Math.Atan2(y, x);
    }

    public override (double, double) ConvertToCartesian()
    {
        double x = Radius * Math.Cos(Angle);
        double y = Radius * Math.Sin(Angle);
        return (x, y);
    }
}

public class CylindricalCoordinates : Coordinates
{
    public double Radius { get; set; }
    public double Angle { get; set; }
    public double Height { get; set; }

    public override void SetPolarCoordinates(double radius, double angle)
    {
        Radius = radius;
        Angle = angle;
    }

    public override void SetCartesianCoordinates(double x, double y)
    {
        Radius = Math.Sqrt(x * x + y * y);
        Angle = Math.Atan2(y, x);
    }

    public override (double, double) ConvertToCartesian()
    {
        double x = Radius * Math.Cos(Angle);
        double y = Radius * Math.Sin(Angle);
        return (x, y);
    }

    public void SetCylindricalCoordinates(double radius, double angle, double height)
    {
        Radius = radius;
        Angle = angle;
        Height = height;
    }

    public void SetCartesianCoordinates(double x, double y, double z)
    {
        Radius = Math.Sqrt(x * x + y * y);
        Angle = Math.Atan2(y, x);
        Height = z;
    }

    public (double, double, double) ConvertToCartesianCylindrical()
    {
        double x = Radius * Math.Cos(Angle);
        double y = Radius * Math.Sin(Angle);
        return (x, y, Height);
    }
}

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("Введіть полярні координати (Радіус Кут):");
        string[] polarInput = Console.ReadLine()?.Split();
        if (polarInput != null && polarInput.Length == 2 &&
            double.TryParse(polarInput[0], out double polarRadius) &&
            double.TryParse(polarInput[1], out double polarAngle))
        {
            ICoordinates polarPoint = new PolarCoordinates();
            polarPoint.SetPolarCoordinates(polarRadius, polarAngle);

            Console.WriteLine($"Полярні координати: Радіус = {((PolarCoordinates)polarPoint).Radius}, Кут = {((PolarCoordinates)polarPoint).Angle}");

            (double x, double y) = polarPoint.ConvertToCartesian();
            Console.WriteLine($"Переведено в декартові: X = {x}, Y = {y}");
        }
        else
        {
            Console.WriteLine("Некоректний ввід для полярних координат.");
        }

        Console.WriteLine("Введіть циліндричні координати (Радіус Кут Висота):");
        string[] cylindricalInput = Console.ReadLine()?.Split();
        if (cylindricalInput != null && cylindricalInput.Length == 3 &&
            double.TryParse(cylindricalInput[0], out double cylindricalRadius) &&
            double.TryParse(cylindricalInput[1], out double cylindricalAngle) &&
            double.TryParse(cylindricalInput[2], out double cylindricalHeight))
        {
            ICoordinates cylindricalPoint = new CylindricalCoordinates();
            ((CylindricalCoordinates)cylindricalPoint).SetCylindricalCoordinates(cylindricalRadius, cylindricalAngle, cylindricalHeight);

            Console.WriteLine($"Циліндричні координати: Радіус = {((CylindricalCoordinates)cylindricalPoint).Radius}, Кут = {((CylindricalCoordinates)cylindricalPoint).Angle}, Висота = {((CylindricalCoordinates)cylindricalPoint).Height}");

            (double x, double y, double z) = ((CylindricalCoordinates)cylindricalPoint).ConvertToCartesianCylindrical();
            Console.WriteLine($"Переведено в декартові: X = {x}, Y = {y}, Z = {z}");
        }
        else
        {
            Console.WriteLine("Некоректний ввід для циліндричних координат.");
        }
    }
}
